drop table if exists goldusers_signup;
CREATE TABLE goldusers_signup(userid integer,gold_signup_date date); 

INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'09-22-2017'),
(3,'04-21-2017');

drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES (1,'09-02-2014'),
(2,'01-15-2015'),
(3,'04-11-2014');

drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'04-19-2017',2),
(3,'12-18-2019',1),
(2,'07-20-2020',3),
(1,'10-23-2019',2),
(1,'03-19-2018',3),
(3,'12-20-2016',2),
(1,'11-09-2016',1),
(1,'05-20-2016',3),
(2,'09-24-2017',1),
(1,'03-11-2017',2),
(1,'03-11-2016',1),
(3,'11-10-2016',1),
(3,'12-07-2017',2),
(3,'12-15-2016',2),
(2,'11-08-2017',2),
(2,'09-10-2018',3);


drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);


select * from sales;
select * from product;
select * from goldusers_signup;
select * from users;


-- Total Amount Spend by each customer on zomato 
-- Select sales.userid , sum(product.price)
-- from sales 
-- join product 
-- on sales.product_id = product.product_id 
-- group by sales.userid ; 




-- How many days each customer visited zomato
-- select userid , count(distinct created_date) as distinct_days 
-- from sales 
-- group by userid




-- What was the first item purchased by the customers ?
-- with cte1 as (
-- select sales.userid as "user_id" ,product_name as "product_name" , rank() over (partition by sales.userid order by sales.created_date) as "Rank"
-- from sales 
-- join product 
-- on sales.product_id = product.product_id
-- -- order by sales.userid
-- )

-- select user_id , product_name 
-- from cte1 
-- where Rank = 1



-- Which item was most popular for each customer?
-- WITH cte1 AS (
--     SELECT userid AS userid, product_id AS product_id, COUNT(product_id) AS maxi
--     FROM Sales 
--     GROUP BY userid, product_id
-- ), 
-- cte2 AS (
--     SELECT userid AS user_id, product_id AS product_id,
--     DENSE_RANK() OVER (PARTITION BY userid ORDER BY maxi DESC) AS rnk
--     FROM cte1
-- )
-- SELECT user_id, product_id
-- FROM cte2 
-- WHERE rnk = 1;



-- Which item was purchased first after they became the member 
-- with cte1 as (
-- select Sales.userid as userid , Sales.product_id as product_id, rank() over (partition by Sales.userid order by Sales.created_date) as "rnk"
-- from Sales 
-- join goldusers_signup
-- on Sales.userid = goldusers_signup.userid
-- where Sales.created_date > goldusers_signup.gold_signup_date
-- )

-- select userid , product_id
-- from cte1 
-- where rnk=1



-- Which item was purchased just before they became the member

-- select userid , product_id
-- from 
-- (select Sales.userid  , Sales.created_date , Sales.product_id , rank() over (partition by Sales.userid order by created_date desc ) as rnk
-- from Sales 
-- left join goldusers_signup
-- on Sales.userid = goldusers_signup.userid 
-- where Sales.created_date < goldusers_signup.gold_signup_date) f
-- where rnk=1




-- What is the total orders and amount spent for each member before they became a member? 

-- with cte as (
-- select f.userid as userid , product.price as amount 
-- from 
-- (select Sales.userid , Sales.product_id 
-- from Sales 
-- left join goldusers_signup
-- on Sales.userid = goldusers_signup.userid 
-- where Sales.created_date < goldusers_signup.gold_signup_date) f 
-- join product
-- on f.product_id = product.product_id
-- ) 

-- select userid , sum(amount)
-- from cte 
-- group by userid


-- If buying each product generates points for eg 5rs=2 zomato points and each product has different purchasing points 
-- for eg for p1 5rs=1 zomato point, for p2 10rs=5 zomato point and p3 5rs=1 zomato point, 
-- calculate points collected by each customers and for which product most points have been given till now 

-- select userid , sum(total_points) as "total_user_points"
-- from 
-- (select userid , product_id , total_amount, points , total_amount/points as "total_points"
-- from 
-- (select userid , product_id , total_amount , case when product_id = 1 then 5 when product_id=2 then 2 when product_id=3 then 5 end as "points"
-- from 
-- (select userid ,  product_id , sum(amount) as "total_amount"
-- from 
-- (select Sales.userid , Sales.product_id, Product.price as amount
-- from Sales 
-- join product 
-- on sales.product_id = Product.product_id) a 
-- group by userid , product_id) b) c ) d 
-- group by userid


-- In the first one year after a customer joins the gold program (including their joining date ) irrespective 
-- of what the customer has purchased they earn 5 zomato points for every 1- rs spent who earned more 1 or 3
-- and what was their points earnings in their first year ?

